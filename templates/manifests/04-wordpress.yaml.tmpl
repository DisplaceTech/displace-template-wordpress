apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{.ProjectName}}-wordpress-data
  namespace: {{.Namespace}}
  labels:
    app.kubernetes.io/name: {{.ProjectName}}
    app.kubernetes.io/instance: {{.ProjectName}}
    app.kubernetes.io/component: wordpress
    app.kubernetes.io/managed-by: displace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.ProjectName}}-wordpress
  namespace: {{.Namespace}}
  labels:
    app.kubernetes.io/name: {{.ProjectName}}
    app.kubernetes.io/instance: {{.ProjectName}}
    app.kubernetes.io/component: wordpress
    app.kubernetes.io/managed-by: displace
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{.ProjectName}}
      app.kubernetes.io/component: wordpress
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{.ProjectName}}
        app.kubernetes.io/instance: {{.ProjectName}}
        app.kubernetes.io/component: wordpress
    spec:
      containers:
      - name: wordpress
        image: docker.io/bitnami/wordpress:6.8.2-debian-12-r4
        env:
        - name: WORDPRESS_DATABASE_HOST
          value: {{.ProjectName}}-mariadb
        - name: WORDPRESS_DATABASE_PORT_NUMBER
          value: "3306"
        - name: WORDPRESS_DATABASE_NAME
          value: wordpress
        - name: WORDPRESS_DATABASE_USER
          value: wordpress
        - name: WORDPRESS_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{.ProjectName}}-mariadb
              key: password
        - name: WORDPRESS_BLOG_NAME
          value: "{{.ProjectDisplayName}} Blog"
        - name: WORDPRESS_USERNAME
          value: admin
        - name: WORDPRESS_PASSWORD
          value: "{{.WordPressPassword}}"
        - name: WORDPRESS_EMAIL
          value: admin@{{.ProjectName}}.local
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8443
          name: https
        livenessProbe:
          httpGet:
            path: /wp-admin/install.php
            port: http
            httpHeaders:
            - name: Host
              value: 127.0.0.1
          initialDelaySeconds: 120
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /wp-login.php
            port: http
            httpHeaders:
            - name: Host
              value: 127.0.0.1
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        resources:
          limits:
            memory: 512Mi
            cpu: 500m
          requests:
            memory: 256Mi
            cpu: 100m
        volumeMounts:
        - name: wordpress-data
          mountPath: /bitnami/wordpress
      volumes:
      - name: wordpress-data
        persistentVolumeClaim:
          claimName: {{.ProjectName}}-wordpress-data
---
apiVersion: v1
kind: Service
metadata:
  name: {{.ProjectName}}-wordpress
  namespace: {{.Namespace}}
  labels:
    app.kubernetes.io/name: {{.ProjectName}}
    app.kubernetes.io/instance: {{.ProjectName}}
    app.kubernetes.io/component: wordpress
    app.kubernetes.io/managed-by: displace
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  - port: 443
    targetPort: https
    protocol: TCP
    name: https
  selector:
    app.kubernetes.io/name: {{.ProjectName}}
    app.kubernetes.io/component: wordpress
