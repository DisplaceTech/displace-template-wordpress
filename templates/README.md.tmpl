# {{.ProjectName}} WordPress Project

**Generated by Displace CLI** - A production-ready WordPress deployment on Kubernetes

## Project Overview

This project contains:
- WordPress with persistent storage
- MariaDB database with persistent storage
- Ingress for external access
- Kubernetes secrets for credential management

## Quick Start

Deploy to Kubernetes:
```bash
# Deploy to a specific cluster
displace project deploy --cluster=your-cluster-name

# Or deploy interactively
displace project deploy

# Manual deployment (apply manifests + credential overrides):
kubectl apply -f manifests/
kubectl apply -f manifests/secrets/  # Apply credential overrides
```

Check status:
```bash
displace project info
kubectl get all -n {{.Namespace}}
```

## Access WordPress

Port forward to local development:
```bash
kubectl port-forward -n {{.Namespace}} svc/{{.ProjectName}}-wordpress 8080:80
# Then open http://localhost:8080
```

## Credentials

🔐 **Sensitive credentials are stored in `.credentials` file**

**WordPress Admin:**
- Username: admin
- Password: *(see .credentials file)*
- Email: admin@{{.ProjectName}}.local

**Database:**
- Host: {{.ProjectName}}-mariadb.{{.Namespace}}.svc.cluster.local
- Database: wordpress
- Username: wordpress
- Password: *(see .credentials file)*

**To view credentials:**
```bash
# View all credentials
cat .credentials

# Source credentials for shell use
source .credentials
echo "WordPress password: $WORDPRESS_PASSWORD"
```

⚠️  **Security Note:** The `.credentials` file is automatically excluded from git via `.gitignore`

## Management

Scale WordPress:
```bash
kubectl scale deployment {{.ProjectName}}-wordpress -n {{.Namespace}} --replicas=3
```

Backup database:
```bash
# Load credentials first
source .credentials
kubectl exec -n {{.Namespace}} deployment/{{.ProjectName}}-mariadb -- mysqldump -u wordpress -p$DB_PASSWORD wordpress > backup.sql
```

## Cleanup

```bash
displace project destroy
```

**Warning**: This permanently deletes all data.

---

**Generated by Displace CLI** - Making Kubernetes deployment simple and reliable.
